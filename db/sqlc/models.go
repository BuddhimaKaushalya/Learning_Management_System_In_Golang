// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type Assignment struct {
	AssignmentID   int64     `json:"assignment_id"`
	CourseID       int64     `json:"course_id"`
	Title          string    `json:"title"`
	AssignmentFile string    `json:"assignment_file"`
	DueDate        string    `json:"due_date"`
	CreatedAt      time.Time `json:"created_at"`
	UpdatedAt      time.Time `json:"updated_at"`
}

type Category struct {
	CategoryID int64     `json:"category_id"`
	Category   string    `json:"category"`
	CreatedAt  time.Time `json:"created_at"`
	UpdatedAt  time.Time `json:"updated_at"`
}

type Course struct {
	CourseID         int64     `json:"course_id"`
	UserID           int64     `json:"user_id"`
	Title            string    `json:"title"`
	Description      string    `json:"description"`
	Image            string    `json:"image"`
	Catagory         string    `json:"catagory"`
	WhatWill         []byte    `json:"what_will"`
	SequentialAccess bool      `json:"sequential_access"`
	CreatedAt        time.Time `json:"created_at"`
	UpdatedAt        time.Time `json:"updated_at"`
}

type CourseProgress struct {
	CourseprogressID int64     `json:"courseprogress_id"`
	CourseID         int64     `json:"course_id"`
	UserID           int64     `json:"user_id"`
	Progress         int64     `json:"progress"`
	CreatedAt        time.Time `json:"created_at"`
	UpdatedAt        time.Time `json:"updated_at"`
}

type LessonCompletion struct {
	CompletionID int64     `json:"completion_id"`
	UserID       int64     `json:"user_id"`
	CourseID     int64     `json:"course_id"`
	MaterialID   int64     `json:"material_id"`
	Completed    bool      `json:"completed"`
	CompletedAt  time.Time `json:"completed_at"`
}

type Mark struct {
	MarkID    int64     `json:"mark_id"`
	CourseID  int64     `json:"course_id"`
	UserID    int64     `json:"user_id"`
	Marks     int64     `json:"marks"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type Material struct {
	MaterialID   int64     `json:"material_id"`
	CourseID     int64     `json:"course_id"`
	Title        string    `json:"title"`
	MaterialFile string    `json:"material_file"`
	OrderNumber  int64     `json:"order_number"`
	CreatedAt    time.Time `json:"created_at"`
	UpdatedAt    time.Time `json:"updated_at"`
}

type ProfilePicture struct {
	ProfilePictureID int64     `json:"profile_picture_id"`
	UserID           int64     `json:"user_id"`
	Picture          string    `json:"picture"`
	CreatedAt        time.Time `json:"created_at"`
	UpdatedAt        time.Time `json:"updated_at"`
}

type Request struct {
	RequestID int64     `json:"request_id"`
	CourseID  int64     `json:"course_id"`
	Confirm   bool      `json:"confirm"`
	Pending   bool      `json:"pending"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type Session struct {
	SessionID    pgtype.UUID `json:"session_id"`
	UserID       int64       `json:"user_id"`
	RefreshToken string      `json:"refresh_token"`
	UserAgent    string      `json:"user_agent"`
	ClientIp     string      `json:"client_ip"`
	IsBlocked    bool        `json:"is_blocked"`
	ExpiresAt    time.Time   `json:"expires_at"`
	CreatedAt    time.Time   `json:"created_at"`
}

type Submission struct {
	SubmissionID     int64     `json:"submission_id"`
	AssignmentID     int64     `json:"assignment_id"`
	UserID           int64     `json:"user_id"`
	Submitted        bool      `json:"submitted"`
	Grade            string    `json:"grade"`
	Resource         string    `json:"resource"`
	DateOfSubmission time.Time `json:"date_of_submission"`
	UpdatedAt        time.Time `json:"updated_at"`
}

type Subscription struct {
	SubscriptionID int64     `json:"subscription_id"`
	UserID         int64     `json:"user_id"`
	CourseID       int64     `json:"course_id"`
	Active         bool      `json:"active"`
	Pending        bool      `json:"pending"`
	CreatedAt      time.Time `json:"created_at"`
	UpdatedAt      time.Time `json:"updated_at"`
}

type User struct {
	UserID            int64     `json:"user_id"`
	UserName          string    `json:"user_name"`
	FirstName         string    `json:"first_name"`
	LastName          string    `json:"last_name"`
	Email             string    `json:"email"`
	IsEmailVerified   bool      `json:"is_email_verified"`
	HashedPassword    string    `json:"hashed_password"`
	PasswordChangedAt time.Time `json:"password_changed_at"`
	Role              string    `json:"role"`
	CreatedAt         time.Time `json:"created_at"`
	UpdatedAt         time.Time `json:"updated_at"`
}

type UserStatus struct {
	StatusID  int64     `json:"status_id"`
	UserID    int64     `json:"user_id"`
	Active    bool      `json:"active"`
	Pending   bool      `json:"pending"`
	CreatedAt time.Time `json:"created_at"`
}

type VerifyEmail struct {
	EmailID    int64     `json:"email_id"`
	UserID     int64     `json:"user_id"`
	Email      string    `json:"email"`
	SecretCode string    `json:"secret_code"`
	IsUsed     bool      `json:"is_used"`
	CreatedAt  time.Time `json:"created_at"`
	ExpiredAt  time.Time `json:"expired_at"`
}
